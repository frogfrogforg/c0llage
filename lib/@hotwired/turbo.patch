diff --git a/lib/@hotwired/turbo@7.0.0-beta.4.js b/lib/@hotwired/turbo@7.0.0-beta.4.js
index fbdda02..119f27a 100644
--- a/lib/@hotwired/turbo@7.0.0-beta.4.js
+++ b/lib/@hotwired/turbo@7.0.0-beta.4.js
@@ -696,8 +696,12 @@ class View {
       try {
         this.renderer = renderer;
         this.prepareToRenderSnapshot(renderer);
-        this.delegate.viewWillRenderSnapshot(snapshot, isPreview);
-        await this.renderSnapshot(renderer);
+        const event = this.delegate.viewWillRenderSnapshot(snapshot, isPreview)
+
+        if (!event.defaultPrevented) {
+          await this.renderSnapshot(renderer);
+        }
+
         this.delegate.viewRenderedSnapshot(snapshot, isPreview);
         this.finishRenderingSnapshot(renderer);
       }
@@ -1048,6 +1052,12 @@ class FrameController {
   formSubmissionFinished(formSubmission) {
   }
   viewWillRenderSnapshot(snapshot, isPreview) {
+    return dispatch("turbo:before-render", {
+      detail: {
+        newBody: snapshot.element
+      },
+      cancelable: true,
+    })
   }
   viewRenderedSnapshot(snapshot, isPreview) {
   }
@@ -1450,7 +1460,7 @@ class PageSnapshot extends Snapshot {
     return this.fromDocument(element.ownerDocument);
   }
   static fromDocument({ head, body }) {
-    return new this(body, new HeadSnapshot(head));
+    return new this(body.cloneNode(true), new HeadSnapshot(head))
   }
   clone() {
     return new PageSnapshot(this.element.cloneNode(true), this.headSnapshot);
@@ -2628,7 +2638,7 @@ class Session {
     this.notifyApplicationBeforeCachingSnapshot();
   }
   viewWillRenderSnapshot({ element }, isPreview) {
-    this.notifyApplicationBeforeRender(element);
+    return this.notifyApplicationBeforeRender(element);
   }
   viewRenderedSnapshot(snapshot, isPreview) {
     this.view.lastRenderedLocation = this.history.location;
@@ -2658,7 +2668,7 @@ class Session {
     return dispatch("turbo:before-cache");
   }
   notifyApplicationBeforeRender(newBody) {
-    return dispatch("turbo:before-render", { detail: { newBody } });
+    return dispatch("turbo:before-render", { detail: { newBody }, cancelable: true });
   }
   notifyApplicationAfterRender() {
     return dispatch("turbo:render");
